
<div class="row">
<h1>HTML Basics</h1>
<p>HTML stands for HyperText Markup Language, or what the browser uses to render elements onto the webpage you see here.</p>

<h3>Anatomy of an Element</h3>

<p>Elements are the basic building blocks you use to make a webpage. Let's take a look at this example:</p>
<div class="snippet">
  <div class="col-md-8">
    <div class="row">
      <pre class="prettyprint"><!-- btw, here's a comment! -->
<a href='www.buzzfeed.com/elainawahl/an-ode-to-orange-cats-basically'>
  Here's a link to some cute cats.
</a></pre>
    </div>
  </div>
  <div class="col-md-4">
    <div class="row annotation">
      <a href='http://www.buzzfeed.com/elainawahl/an-ode-to-orange-cats-basically'>Here's a link to some cute cats.</a>
    </div>
  </div>
</div>

<div class="clearfix"></div>
<p>
Let's dissect this element a bit:
<ul>
  <li><strong>tags</strong> : indicate the start and end of an HTML element. All closing tags start with a <code>\</code>. This particular tag is an a, or anchor tag. It creates a link
  </li>
  <li><strong>attribute</strong> : give more information to tags. Common attributes include "id" and "class". In this case, <em>href</em>, or where the link directs to, is an attribute.
  </li>
  <li>You can nest tags within each other. White space doesn't matter.</li>
</ul>
</p>

<h3>Block vs Inline</h3>

<p>
  <strong>Block</strong> elements start on a new line and take up the whole width available. Some examples:
  <ul>
    <li><code>&lt;div&gt;</code></li>
    <li><code>&lt;h1&gt;</code> - <code>&lt;h6&gt;</code></li>
  </ul>
</p>

<p>
  On the other hand, <strong>inline</strong> elements only take up as much width as necessary. They remain on the line. Some examples:
  <ul>
    <li><code>&lt;a&gt;</code></li>
    <li><code>&lt;img&gt;</code></li>
    <li><code>&lt;span&gt;</code></li>
  </ul>
</p>

<p>
  Look at the difference between using a <code>div</code> (block tag) and a <code>span</code> (inline tag).

</p>
<div class="snippet">
  <div class="col-md-8">
    <div class="row">
      <pre class="prettyprint"><div>each div</div><div>has its</div><div>own line.</div></pre>
    </div>
  </div>
  <div class="col-md-4">
    <div class="rendered-result">
    </div>
  </div>
</div>

<p>VS</p>

<div class="snippet">
  <div class="col-md-8">
    <div class="row">
      <pre class="prettyprint"><span>each span </span><span>stays on </span><span>the line.</span></pre>
    </div>
  </div>
  <div class="col-md-4">
    <div class="rendered-result">
    </div>
  </div>
</div>

<div class="clearfix"></div>

<h3>Tag Classes</h3>

<p>Certain tags are <strong><a href="https://en.wikipedia.org/wiki/Semantic_HTML">semantic</a></strong>, because they make code easier to maintain and style, and more help asssistive technology navigate a page. And as a plus, they help you importantly yield better SEO rankings (think of Google as the biggest blind user). These are elements like <code>&lt;strong&gt;</code> (instead of the <code>&lt;b&gt;</code>) or <code>&lt;em&gt;</code> (instead of <code>&lt;i&gt;</code>).

Some like <code>&lt;div&gt;</code> and <code>&lt;span&gt;</code> are structural, which help lay out elements on the page.

</p>

<div class="clearfix"></div>

<h3>Page Structure</h3>

<p>
A basic HTML document that you can use to create a webpage from scratch generally looks like the following: 
</p>

<div class="snippet">
  <div class="col-md-12">
    <div class="row">
      <pre class="prettyprint linenums lang-html no-esp">
&lt;!DOCTYPE html&gt; &lt;!-- indicates what type of HTML --&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;!-- where meta information goes, e.g. title --&gt;
    &lt;title&gt;Teach Me How to Dougie&lt;/title&gt; &lt;!-- page title (as seen on your tab) --&gt;

  &lt;/head&gt;
  &lt;body&gt;
    &lt;!-- main content --&gt;
    &lt;h1&gt;Teach Me&lt;/h1&gt; &lt;!-- header tag (also h2, h3, h4) --&gt;
    &lt;p&gt;T-teach me how to dougie&lt;/p&gt; &lt;!-- paragraph tag --&gt;
  &lt;/body&gt;
&lt;/html&gt;</pre>
    </div>
  </div>
</div>

<div class="clearfix"></div>

<h3>Further Resources</h3>

<h4><a href="http://www.w3schools.com/tags/">You Only Need 10 HTML Tags</a></h4>
<p>If the internet claims so, it must be true. I'd argue against using the b and i tags, but otherwise I'd agree.</p>

<h4><a href="http://webdesignfromscratch.com/html-css/list-of-html-tags-with-semantic-usage/">HTML Tags with Semantic Usage</a></h4>
<p>A great guide most HTML tags, when and how to use them.</p>

<h4><a href="http://html5boilerplate.com/">HTML5 Boilerplate</a></h4>

<p>Highly recommended starter template. It includes some css and js to start you off</p>

<h4><a href="https://getbootstrap.com/">Bootstrap</a></h4>

<p>Bootstrap is a big framework on top of basic concepts. Explore its basic documentation in order to learn how to use it. It comes with plenty of out-of-the-box elements like buttons, navigation, etc.</p>

<h4><a href="https://getskeleton.com/">Skeleton</a></h4>

<p>Skeleton is a minimal framework. It includes a basic grid system, and great for lightweight projects (like portfolios :). </p>

</div>